#!/usr/bin/env python3
import shutil
from datetime import datetime
import os
from pytz import timezone
import subprocess
from jinja2 import Template


def main():
    require_aoc()
    os.makedirs(date_slug, exist_ok=True)
    make_new_script()
    download_readme()
    download_input()


# Render the j2 file as a new usable script and populate the date in the header comment
def require_aoc():
    if not shutil.which('aoc'):
        raise(ValueError('AOC commandline util not found. Get it from https://github.com/scarvalhojr/aoc-cli'))


def make_new_script():
    if os.path.isfile(new_script_dest):
        print(f'File {new_script_dest} already exists. Not overwriting.')
        return
    with open('./solution.py.j2') as t:
        rendered = Template(t.read()).render(DD=dd, YYYY=yyyy)
    with open(new_script_dest, "w") as fh:
        fh.write(rendered)
    os.chmod(new_script_dest, 0o755)


def download_readme():
    if os.path.isfile(f'{date_slug}/puzzle.md'):
        print(f'Already downloaded {date_slug}/puzzle.md')
        return
    subprocess.run('aoc', cwd=date_slug)


def download_input():
    if os.path.isfile(f'{date_slug}/input'):
        print(f'Already downloaded {date_slug}/input')
        return
    subprocess.run(['aoc', 'd'], cwd=date_slug)


if __name__ == "__main__":
    eastern = timezone('US/Eastern')
    now = datetime.now(eastern)
    yyyy = now.year
    dd = str(now.day).rjust(2, '0')
    date_slug = f'{yyyy}/{dd}'
    new_script_dest = f'{date_slug}/solution.py'
    main()
